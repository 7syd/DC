import random

# List of available servers
servers = ["Server1", "Server2", "Server3"]

# Round Robin tracker
current_index = 0

# Function to get server using Round Robin
def get_server_round_robin():
    global current_index
    server = servers[current_index]
    current_index = (current_index + 1) % len(servers)
    return server

# Function to get server using Random selection
def get_server_random():
    return random.choice(servers)

# Simulate request routing
def simulate_requests(algorithm, num_requests):
    for i in range(1, num_requests + 1):
        if algorithm == "round_robin":
            server = get_server_round_robin()
        elif algorithm == "random":
            server = get_server_random()
        else:
            print("Invalid algorithm")
            return
        print(f"Request {i} routed to {server}")

# Run both load balancing simulations
print("Round Robin Load Balancing:")
simulate_requests("round_robin", 10)

print("\nRandom Load Balancing:")
simulate_requests("random",Â 10)